#!/bin/bash

# By Linc Fessenden, Ben Cotton and contributors
# Find the latest script at http://github.com/funnelfiasco/bashbpodder
# Revision 2.0.0-veryalpha

# Licensed under GPLv2 until Linc colarifies the version of the GPL that applies
# upstream. See LICENSE.txt for full license text.

# Make script crontab friendly:
cd $(dirname $0)

# datadir is the directory you want podcasts saved to:
#datadir=$(date +%Y-%m-%d)
datadir="bptest"

# Number of times to retry a download
download_retries=10

# Which downloader to use? Supported options are 'curl' and 'wget'
downloader='wget'

# create datadir if necessary:
mkdir -p $datadir

# Delete any temp file:
rm -f temp.log

# Support both curl and wget
case $downloader in
	wget)
		get_podcasts="wget -q -O -"
		download_cmd="wget -U BashPodder -c -q -t $download_retries -O "
	;;
	curl)
		get_podcasts="curl -s"
		download_cmd="curl -A BashPodder -s --retry $download_retries -o "
	;;
	*)
		echo "Downloader $downloader not supported."
	exit 1
esac

# Read the bp.conf file and download any url not already in the podcast.log file:
while read podcast
	do
	file=$(xsltproc parse_enclosure.xsl $podcast 2> /dev/null || $get_podcasts -q $podcast | tr '\r' '\n' | tr \' \" | sed -n 's/.*url="\([^"]*\)".*/\1/p')
	for url in $file
		do
		echo $url >> temp.log
		if ! grep "$url" podcast.log > /dev/null
			then
				$download_cmd $datadir/$(echo "$url" | awk -F'/' {'print $NF'} | awk -F'=' {'print $NF'} | awk -F'?' {'print $1'}) "$url"
		fi
		done
	done < bp.conf
# Move dynamically created log file to permanent log file:
cat podcast.log >> temp.log
sort temp.log | uniq > podcast.log
rm temp.log
# Create an m3u playlist:
ls $datadir | grep -v m3u > $datadir/podcast.m3u
